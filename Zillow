x = pretty(c(-0.4,0.4),10)
y = dnorm(x)

"""
#picture 1
full_precison = plot(x,y,
                     type ='l',
                     main = 'Full Precison Weight',
                     lwd = 3,
                     col = 'blue',
                     xlim = c(-1,1),
                     ylab = '',
                     xlab = '',
                     yaxt="n", #去掉刻度
                     xaxt = 'n',
                     axes=FALSE
                     )
#axes=FALSE,禁止坐标轴生成
#frame = FALSE 禁止框生成
axis(1, xaxp = c(-1, 1, 2))

"""

#picture 1
# set up necessary parameters
mean=0
sd=0.1
lb=-0.2
ub=0.2
# create vector of x's: 100 observations around the given mean and sd
x <- seq(-3,3,length=100)*sd + mean
# find probabilities for these values given the distribution parameters
hx <- dnorm(x,mean,sd)
# plot
plot(x, hx, type="n", xlab="", ylab="", main="Normalized Full Precision Weight",
     xlim = c(-1,1),
     yaxt="n", #去掉刻度
     xaxt = 'n',
     axes=FALSE)
# add lines at the upper and lower bounds
lines(x, hx, lwd =3, col = 'blue',
      ylab = '',
      xlab = '',
      yaxt="n", #去掉刻度
      xaxt = 'n',
      xlim = c(-1,1))
axis(1, xaxp = c(-1, 1, 2))



#picture 2
# set up necessary parameters
mean=0
sd=0.5
lb=-0.2
ub=0.2
# create vector of x's: 100 observations around the given mean and sd
x <- seq(-2,2,length=100)*sd + mean
# find probabilities for these values given the distribution parameters
hx <- dnorm(x,mean,sd)
# plot
plot(x, hx, type="n", xlab="", ylab="", main="Normalized Full Precision Weight", 
     lwd = 3,
     col = 'blue',
     axes=FALSE)
# add lines at the upper and lower bounds
i =  x >= lb & x <= ub
lines(x, hx, lwd =3, col = 'blue')
# create polygon for shading area of distribution
polygon(c(lb,x[i],ub), c(0,hx[i],0), col="lightblue",lty = 3, lwd =2) 
#area <- pnorm(ub, mean, sd) - pnorm(lb, mean, sd)
# add title and axis labels
#mtext(paste("P(",lb,"< IQ <",ub,")=",signif(area, digits=3)),3)
mtext(paste("When t <= w <=t --> 0"))
axis(1, xaxp = c(-1, 1, 2))

